library(raster)
library(tools)
library(sf)
library(tidyverse)
library(here)
library(doParallel)
library(foreach)
library(caret)
library(CAST)
library(cowplot)
library(grid)
library(gridExtra)
library(ggExtra)
library(forcats)
library(magick)
library(biscale)
library(gt)
# library(glcpck)
source(here::here("code/functions.R"))

# main dataset -------------------------------------------------
cmic0 <- glc_proc_data() %>% mutate(tmean = tmean/10-273)
cmic1 <- read.csv("rawdata/mbc_meta_final2.csv") %>% 
  mutate(land_cover = factor(land_cover, levels = c("C", "FB", "FC", "FT", "G", "S"))) %>% 
  mutate(tmean = tmean/10-273) %>% 
  mutate(latitude = Latitude,
         longitude = Longitude) -> cmic1

predictors <- c("Cmic","latitude","longitude", glc_layers()) %>% unname
cmic2 <-bind_rows(
  cmic0[,predictors],
  cmic1[,predictors])  
cmic <- as.data.frame(cmic2) # needed

lm(Cmic ~ tmean, data = cmic0) %>% summary()
lm(Cmic ~ tmean, data = cmic1) %>% summary()

# ************************************************************
# ---------- random sample and building linear model ---------
# ************************************************************
sample_cmic_lm = function(sdata){
  sdata[sample(nrow(sdata), 110), ] -> sub_cmic # sample size =110
  lm_cmic = lm(Cmic ~ tmean, data = sub_cmic) %>% summary()
  lm_cmic$coefficients[2,1] -> lm_slope
  sub_cmic$Slope = lm_slope
  return(sub_cmic)
}

set.seed(20220926)
check_point = seq(-0, -12, -2)

outputs <- cmic2[0,]

for(i in 1:6){
  scenario = check_point[6] # i from 1:6
  for(j in 1:100000) {
    sample_cmic_lm(cmic) -> sub_cmic
    if (abs(sub_cmic$Slope[1] - scenario) < 1 ) {
      outputs <- bind_rows(outputs, sub_cmic)
      print(paste0('loop','****',j))
      break
    } 
    else {next}
    # return(outputs)
  }
  print(paste0('scenario','****',i))
}
outputs$Slope %>% unique() %>% sort()
# write.csv(outputs,"output/resampled_cmic.csv", row.names = F)

outputs = read.csv("output/resampled_cmic.csv") %>% 
  mutate(land_cover = factor(land_cover, levels = c("C", "FB", "FC", "FT", "G", "S")))

# ************************************************************
# ---------- random sample and building linear model ---------
# -- here we randomly resample 100 times (n=500)
# ************************************************************
cmic0 <- glc_proc_data() %>% mutate(tmean = tmean/10-273)
predictors <- c("Cmic","latitude","longitude", glc_layers()) %>% unname
lm(Cmic ~ tmean, data = cmic0) %>% summary()

predictors <- c("Cmic","latitude","longitude", glc_layers()) %>% unname
cmic2 <- cmic0[,predictors]  
cmic <- as.data.frame(cmic2) # needed

sample_cmic0_lm = function(sdata){
  sdata[sample(nrow(sdata), 500), ] -> sub_cmic 
  lm_cmic = lm(Cmic ~ tmean, data = sub_cmic) %>% summary()
  lm_cmic$coefficients[2,1] -> lm_slope
  sub_cmic$Slope = lm_slope
  return(sub_cmic)
}

outputs <- cmic2[0,]

for(i in 1:100){
  sample_cmic0_lm(cmic) -> sub_cmic
  outputs <- bind_rows(outputs, sub_cmic)
  print(paste0("----------",i))
}

write.csv(outputs,"output/resampled_cmic_500_combined.csv", row.names = F)

