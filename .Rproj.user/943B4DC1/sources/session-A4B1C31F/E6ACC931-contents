---
title: "MBC_meta_analysis"
author: "JinshiJian"
date: "10/24/2021"
output: html_document
---

## Setup
```{r preliminaries, message=FALSE, include=FALSE, echo=FALSE, cache=TRUE}
# Set chunks defaults, these options will be applied to all subsequent chunks
knitr::opts_chunk$set(message = TRUE, include = TRUE, echo = FALSE,
                      fig.height = 4, fig.width = 8)

```

## Load packages
```{r load packages}
library("metafor")
library("meta")
library(dplyr)
library("ggplot2")
library(readxl)
library(tidyr)
library(patchwork)
library(ggmap)
library(maps)
library(mapdata)
```

## Creat functions
```{r creat functions}
read_xlsx <- function(x, n_sheet, n_skip) read_excel(file.path('../rawdata', x), sheet = n_sheet, skip = n_skip)
```

## Load data
```{r load data}
mbc_data <- read_xlsx("MBC_metadata.xlsx", n_sheet=1, n_skip = 0)

# calculate sd if n and se are available
mbc_data %>% 
  mutate(MBC_c_sd = ifelse(is.na(MBC_c_sd), MBC_c_se*sqrt(MBC_c_n), MBC_c_sd),
         MBC_t_sd = ifelse(is.na(MBC_t_sd), MBC_t_se*sqrt(MBC_t_n), MBC_t_sd),
         sd_mean_c = MBC_c_sd/MBC_c,
         sd_mean_t = MBC_t_sd/MBC_t) -> 
  mbc_data

mbc_data %>% 
  mutate(Category = case_when(
    MBC_t > MBC_c ~ "ROM > 1",
    MBC_t == MBC_c ~ "ROM = 1",
    MBC_t < MBC_c ~ "ROM < 1",
    TRUE ~ "Not avaliable"
  )) -> mbc_data

# study 10 Schimidt (2002)
# Mean and sd were calculated from raw data at table 3
sd(c(7.1,9.1,7))
sd(c(9.6,8.2,9.2))
sd(c(18.7,15.4,12.2))
sd(c(4.7,3.7,4.8))

sd(c(7,9,6.7))
sd(c(9.3,9.2,8.4))
sd(c(17.7,18.5,14.6))
sd(c(4.7,4.4,4.2))

mbc_data %>% 
  filter(is.na(MBC_c_sd))

# re-group soil depth
mbc_data$Depth %>% unique()
mbc_data %>% 
  mutate(Depth = case_when(Depth %in% c("0-5", "5-10", "2-3", "0-10", "0-7") ~ "0-10cm",
                            Depth %in% c("10-15", "10-20") ~ "10-20cm",
                            TRUE ~ "Other")) -> mbc_data

# handle magnitude and duration
mbc_data %>% 
  mutate(Magnitude = cut(Magnitude_W, breaks = 5)) %>% 
  select(Magnitude) %>%  unique() 


mbc_data %>% 
  mutate(Magnitude = cut(Magnitude_W, breaks = c(0,1,2,3,4,5))) -> mbc_data


mbc_data %>% select(Magnitude) %>% unique()
class(mbc_data$Magnitude)
mbc_data %>%  
  filter(Magnitude == "(4,5]") %>% 
  select(Paper) %>% unique()

mbc_data %>% 
  mutate(Duration_w = cut(Duration, breaks = c(0,3,6,30))) -> 
  mbc_data

mbc_data$Duration_w[is.na(mbc_data$Duration_w)] = "(0,3]"

mbc_data %>% 
  count(Duration_w)

mbc_data %>% 
  mutate(SOC = case_when(0 < SOC_c & SOC_c <=2 ~ "(0,2]",
                         2 < SOC_c & SOC_c <= 4 ~ "(2,4]",
                         4 < SOC_c & SOC_c <= 6 ~ "(4,6]",
                         6 < SOC_c & SOC_c <= 8 ~ "(6,8]",
                         8 < SOC_c & SOC_c <= 10 ~ "(8,10]",
                         10 < SOC_c ~ "(>10)",
                         TRUE ~ "Not available")
         ) -> mbc_data

# calculate log ROM for SWC, pH, SOC, TN, CN, TP, and MBN
sapply(mbc_data %>% select(SWC_t, SWC_c), class)
mbc_data$SWC_t <- as.numeric(mbc_data$SWC_t)
mbc_data$SWC_c <- as.numeric(mbc_data$SWC_c)
mbc_data %>% 
  mutate(
    SWC_ROM = log(SWC_t/SWC_c),
    pH_ROM = log(pH_t/pH_c),
    SOC_ROM = log(SOC_t/SOC_c),
    TN_ROM = log(TN_t/TN_c),
    CN_ROM = log(CN_t/CN_c),
    TP_ROM = log(TP_t/TP_c),
    MBN_ROM = log(MBN_t/MBN_c)) -> mbc_data

```

## normal distribution test
```{r Normal distribution test}
hist(mbc_data$MBC_t / mbc_data$MBC_c, breaks = 20)
mean(mbc_data$MBC_t / mbc_data$MBC_c, na.rm = T)
sd(mbc_data$MBC_t / mbc_data$MBC_c, na.rm = T)
shapiro.test(mbc_data$MBC_t / mbc_data$MBC_c)

library("digest")
mbc_data %>% 
  mutate(ROM = MBC_t / MBC_c) %>% 
  ggplot(aes(ROM)) + 
  geom_histogram(fill = "gray", col = "black") +
  stat_function(fun = dnorm,
                args = list(mean = mean(mbc_data$MBC_t / mbc_data$MBC_c, na.rm = TRUE),
                            sd = sd(mbc_data$MBC_t / mbc_data$MBC_c, na.rm = T))) +
  theme_set(theme_bw())


# log transformation does not help
hist(log(mbc_data$MBC_t / mbc_data$MBC_c), breaks = 20)
shapiro.test(log(mbc_data$MBC_t / mbc_data$MBC_c))

mbc_data %>% 
  mutate(ROM = log(MBC_t / MBC_c)) %>% 
  ggplot(aes(ROM)) + 
  geom_histogram(fill = "gray", col = "black") +
  # stat_function(fun = dnorm,
  #               args = list(mean = mean(log(mbc_data$MBC_t / mbc_data$MBC_c), na.rm = TRUE),
  #                           sd = sd(log(mbc_data$MBC_t / mbc_data$MBC_c), na.rm = T)),
  #               col = "red") +
  labs(x = "Log ratio of means",
       y = "Count") +
  theme_set(theme_bw()) -> plot_dens

# qq plot
mbc_data %>% 
  mutate(ROM = log(MBC_t / MBC_c)) %>% 
  ggplot(aes(sample = ROM)) +
  stat_qq() + 
  stat_qq_line() +
  labs(x = "Normal theoretical quantile",
       y = "Normal data quantile") -> plot_qq

plot_dens / plot_qq

# ggsave("output/Figure A2.NormalTest.jpg", height = 6, width = 6, dpi = 300, units = "in")

```

## site map
```{r site map}
# plot global site map
counties <- map_data("world", region = ".", exact = FALSE)

ggplot(data = counties) + 
  geom_polygon(aes(x = long, y = lat, group = group),
               color = "white",
               fill = 'gray') + 
  # guides(fill=FALSE) +
  geom_point(data = mbc_data,
             aes(x=Longitude, y=Latitude,
                 size = MBC_t_n,
                 shape = Category,
                 col = Category,
                 ),
             pch = 1,
             alpha = 1,
             stroke = 1.5) +
  scale_x_continuous(name="Longitude", breaks=seq(-180,180, 60),labels = seq(-180,180, 60))+
  scale_y_continuous(limits = c(-60, 90),name="Latitude", breaks=seq(-60,90,30),labels = seq(-60,90,30)) +
  scale_size_continuous(name = "Replication (n)") +
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())

# ggsave("output/Figure 1. Sites distribution.png", width = 8, height = 4, dpi = 300, units = "in" )
```



## Meta-analysis
```{r meta analysis}
meta1 <- metacont(mean.e = MBC_t,
                  n.e = MBC_t_n, 
                  sd.e = MBC_t_sd,
                  median.e = MBC_t_median,
                  q1.e = MBC_t_iqr1,
                  q3.e = MBC_t_iqr3,
                  
                  mean.c = MBC_c,
                  n.c = MBC_c_n, 
                  sd.c = MBC_c_sd,
                  median.c = MBC_c_median,
                  q1.c = MBC_c_iqr1,
                  q3.c = MBC_c_iqr3,
                  data=mbc_data, sm="ROM",
                  studlab = paste(RCT),
                  backtransf = FALSE
                  )

meta1
```


```{r forest plot, fig.height=20}
#https://bookdown.org/MathiasHarrer/Doing_Meta_Analysis_in_R/forest.html#forest-R
# tiff("../output/MetaForestry.tiff", width = 12, height = 28, pointsize = 1/300, units = 'in', res = 300)
forest.meta(meta1, lab.e = "Warm", leftlabs = c("RCT", "N", "Mean", "SD", "N", "Mean", "SD"))
# dev.off()

meta1$mean.e
meta1$mean.c
```



## subgroup analysis for GC
```{r GC-group, fig.height=6, fig.width=6}
update(meta1, byvar = GC, comb.fixed=FALSE) ->
  sub_GC

# tiff("output/sub_GC_Forestry.tiff", width = 8, height = 6.5, pointsize = 1/300, units = 'in', res = 300)
sub_GC %>% 
  forest(layout = "subgroup",
         hetlab = "",
         print.tau2 = FALSE,
         test.subgroup = FALSE,
         xlim = c(0.5,1.5),
         # overall = FALSE,
         backtransf = FALSE
         )
# dev.off()


## further analysis for W_Pr_remove
mbc_data %>% select(GC) %>% count(GC)
mbc_data %>% filter(GC == "W_Pr_remove")

meta_w_pr_remove <- metacont(mean.e = MBC_t,
                             n.e = MBC_t_n, 
                             sd.e = MBC_t_sd,
                             median.e = MBC_t_median,
                             q1.e = MBC_t_iqr1,
                             q3.e = MBC_t_iqr3,
                              
                             mean.c = MBC_c,
                             n.c = MBC_c_n, 
                             sd.c = MBC_c_sd,
                             median.c = MBC_c_median,
                             q1.c = MBC_c_iqr1,
                             q3.c = MBC_c_iqr3,
                             data=mbc_data %>% filter(GC == "W_Pr_remove"),
                             sm="ROM",
                             studlab = paste(RCT),
                             backtransf = FALSE)

tiff("output/Figure 2b. pr_remove_sensitive.tiff", width = 6, height = 3,
     pointsize = 1/300, units = 'in', res = 300)

forest(metainf(meta_w_pr_remove, pooled="random"),
       xlim = c(0.5,1.25),
       comb.fixed=TRUE,
       overall = FALSE)

dev.off()


trimfill(meta_w_pr_remove, comb.fixed=TRUE) %>% 
  funnel(xlab = "Ratio of means",
         ylab = "Standard error", 
         tcl = -0.4,
         xlim = c(0.25, 2.5))

meta_w_pr_remove %>% summary()
trimfill(meta_w_pr_remove, comb.fixed=TRUE) %>% summary()

funnel(meta_w_pr_remove, xlab = "", ylab = "",
       # xlim = c(0.25, 3.75)
       )

tiff("output/Figure 2c_pr_remove_bias.tiff", width = 5, height = 6, pointsize = 1/300, units = 'in', res = 300)
par(mar=c(2, 0.2, 0.2, 0.2), 
    mai=c(0.3, 0.2, 0.1, 0.1),  # by inches, inner margin
    omi = c(0.3, 0.4, 0.3, 0.1),  # by inches, outer margin 
    mgp = c(0, 0.3, 0), # set distance of axis
    tcl = 0.4,
    cex.axis = 1,
    mfrow=c(2,1))

funnel(meta_w_pr_remove, xlab = "", ylab = "", xlim = c(0.25, 3.75))
mtext(side = 2, text = expression(Standard~error), line = 1.5, cex=1, font=2)
mtext(side = 3, text = expression("( a )"), line = 0.25, cex=1, font=2, adj = 0)

trimfill(meta_w_pr_remove, comb.fixed=TRUE) %>% funnel(xlab = "", ylab = "", xlim = c(0.25, 3.75))
abline(v = 0.7646, col = "black", lty = 2)
mtext(side = 1, text = expression(Ratio~of~means), line = 1.5, cex=1, font=2)
mtext(side = 2, text = expression(Standard~error), line = 1.5, cex=1, font=2)
mtext(side = 3, text = expression("( b )"), line = 0.25, cex=1, font=2, adj = 0)

dev.off()

```

## subgroup analysis for Biomes
```{r Biomes-group, fig.height=8}
tiff("output/sub_Biomes_Forestry.tiff", width = 6, height = 7, pointsize = 1/300, units = 'in', res = 300)
update(meta1, byvar = Biomes, comb.fixed=FALSE) %>% 
  forest(layout = "subgroup",
         print.tau2 = FALSE,
         hetlab = "",
         test.subgroup = FALSE,
         xlim = c(0.5,1.6)
         )
dev.off()

## further analysis for peatland
mbc_data %>% select(Biomes) %>% count(Biomes)
mbc_data %>% filter(Biomes == "Peatland")

meta_peatland <- metacont(mean.e = MBC_t,
                          n.e = MBC_t_n, 
                          sd.e = MBC_t_sd,
                          median.e = MBC_t_median,
                          q1.e = MBC_t_iqr1,
                          q3.e = MBC_t_iqr3,
                            
                          mean.c = MBC_c,
                          n.c = MBC_c_n, 
                          sd.c = MBC_c_sd,
                          median.c = MBC_c_median,
                          q1.c = MBC_c_iqr1,
                          q3.c = MBC_c_iqr3,
                          data=mbc_data %>% filter(Biomes == "Peatland"),
                          sm="ROM",
                          studlab = paste(RCT),
                          backtransf = FALSE)

tiff("output/Figure 3b. peatland_sensitive.tiff", width = 6, height = 4,
     pointsize = 1/300, units = 'in', res = 300)

forest(metainf(meta_peatland, pooled="random"),
       xlim = c(0.5,1.25),
       comb.fixed=TRUE, overall = FALSE)

dev.off()



funnel(meta_peatland, xlab = "", ylab = "",
       # xlim = c(0.25, 3.75)
       )
trimfill(meta_peatland, comb.fixed=TRUE) %>% funnel(xlab = "", ylab = "", xlim = c(0.25, 3.75))

tiff("output/Figure 3c_peatland_bias.tiff", width = 5, height = 6, pointsize = 1/300, units = 'in', res = 300)
par(mar=c(2, 0.2, 0.2, 0.2), 
    mai=c(0.3, 0.2, 0.1, 0.1),  # by inches, inner margin
    omi = c(0.3, 0.4, 0.3, 0.1),  # by inches, outer margin 
    mgp = c(0, 0.3, 0), # set distance of axis
    tcl = 0.4,
    cex.axis = 1,
    mfrow=c(2,1))

funnel(meta_peatland, xlab = "", ylab = "", xlim = c(-1.2, 0.2))
mtext(side = 2, text = expression(Standard~error), line = 1.5, cex=1, font=2)
mtext(side = 3, text = expression("( a )"), line = 0.25, cex=1, font=2, adj = 0)

trimfill(meta_peatland, comb.fixed=TRUE) %>% funnel(xlab = "", ylab = "", xlim = c(-1.2, 0.2))
mtext(side = 1, text = expression(Ratio~of~means), line = 1.5, cex=1, font=2)
mtext(side = 2, text = expression(Standard~error), line = 1.5, cex=1, font=2)
mtext(side = 3, text = expression("( b )"), line = 0.25, cex=1, font=2, adj = 0)

dev.off()
```

## subgroup analysis for Depth
```{r Depth-group, fig.height=8}
tiff("output/sub_Depth_Forestry.tiff", width = 6, height = 4, pointsize = 1/300, units = 'in', res = 300)
update(meta1, byvar = Depth, comb.fixed=FALSE) %>% 
  forest(layout = "subgroup",
         hetlab = "",
         print.tau2 = FALSE,
         test.subgroup = FALSE
         )
dev.off()
```

## subgroup of warming Magnitude
```{r subgroup-magnitude, fig.height = 8}
tiff("output/sub_magnitude_Forestry.tiff", width = 7, height = 5.5, pointsize = 1/300, units = 'in', res = 300)
update(meta1, byvar = Magnitude, comb.fixed=FALSE) %>% 
  forest(layout = "subgroup",
         hetlab = "",
         print.tau2 = FALSE,
         test.subgroup = FALSE,
         xlim = c(0.5, 2.5),
         backtransf = FALSE
         )
dev.off()

## further analysis for (0,1] ****************************************************************************
meta_magnitude1 <- metacont(mean.e = MBC_t,
                          n.e = MBC_t_n, 
                          sd.e = MBC_t_sd,
                          median.e = MBC_t_median,
                          q1.e = MBC_t_iqr1,
                          q3.e = MBC_t_iqr3,
                            
                          mean.c = MBC_c,
                          n.c = MBC_c_n, 
                          sd.c = MBC_c_sd,
                          median.c = MBC_c_median,
                          q1.c = MBC_c_iqr1,
                          q3.c = MBC_c_iqr3,
                          data=mbc_data %>% filter(Magnitude == "(0,1]"),
                          sm="ROM",
                          studlab = paste(RCT),
                          backtransf = FALSE)

tiff("output/Figure 5b. magnitude_sensitive1.tiff", width = 6, height = 8,
     pointsize = 1/300, units = 'in', res = 300)

forest(metainf(meta_magnitude1, pooled="random"),
       # xlim = c(0.75,1.25),
       comb.fixed=TRUE, overall = FALSE)
dev.off()

trimfill(meta_magnitude1, comb.fixed=TRUE) %>% funnel(xlab = "", ylab = "")

meta_magnitude1 %>% summary()
trimfill(meta_magnitude1, comb.fixed=TRUE) %>% summary()

tiff("output/Figure 5b_magnitude_bias1.tiff", width = 5, height = 6, pointsize = 1/300, units = 'in', res = 300)
par(mar=c(2, 0.2, 0.2, 0.2), 
    mai=c(0.3, 0.2, 0.1, 0.1),  # by inches, inner margin
    omi = c(0.3, 0.4, 0.3, 0.1),  # by inches, outer margin 
    mgp = c(0, 0.3, 0), # set distance of axis
    tcl = 0.4,
    cex.axis = 1,
    mfrow=c(2,1))

funnel(meta_magnitude1, xlab = "", ylab = "", xlim = c(-1.1, 1.6))
mtext(side = 2, text = expression(Standard~error), line = 1.5, cex=1, font=2)
mtext(side = 3, text = expression("( a )"), line = 0.25, cex=1, font=2, adj = 0)

trimfill(meta_magnitude1, black=TRUE) %>% funnel(xlab = "", ylab = "", xlim = c(-1.1, 1.6))
# abline(v = 0.9451, col = "black", lty = 2)
mtext(side = 1, text = expression(Ratio~of~means), line = 1.5, cex=1, font=2)
mtext(side = 2, text = expression(Standard~error), line = 1.5, cex=1, font=2)
mtext(side = 3, text = expression("( a )"), line = 0.25, cex=1, font=2, adj = 0)

dev.off()

## further analysis for Duration of (1,2] ***************************************************************
meta_magnitude2 <- metacont(mean.e = MBC_t,
                          n.e = MBC_t_n, 
                          sd.e = MBC_t_sd,
                          median.e = MBC_t_median,
                          q1.e = MBC_t_iqr1,
                          q3.e = MBC_t_iqr3,
                            
                          mean.c = MBC_c,
                          n.c = MBC_c_n, 
                          sd.c = MBC_c_sd,
                          median.c = MBC_c_median,
                          q1.c = MBC_c_iqr1,
                          q3.c = MBC_c_iqr3,
                          data=mbc_data %>% filter(Magnitude == "(1,2]"),
                          sm="ROM",
                          studlab = paste(RCT),
                          backtransf = FALSE)

tiff("output/Figure 5b. magnitude_sensitive2.tiff", width = 6, height = 12,
     pointsize = 1/300, units = 'in', res = 300)

forest(metainf(meta_magnitude2, pooled="random"),
       # xlim = c(0.85,1.25),
       comb.fixed=TRUE, overall = FALSE)

dev.off()



funnel(meta_magnitude2, xlab = "", ylab = "",
       # xlim = c(0.25, 3.75)
       )
trimfill(meta_magnitude2, comb.fixed=TRUE) %>% funnel(xlab = "", ylab = "")

meta_magnitude2 %>% summary()
trimfill(meta_magnitude2, comb.fixed=TRUE) %>% summary()

tiff("output/Figure 5b_magnitude_bias2.tiff", width = 5, height = 6, pointsize = 1/300, units = 'in', res = 300)
par(mar=c(2, 0.2, 0.2, 0.2), 
    mai=c(0.3, 0.2, 0.1, 0.1),  # by inches, inner margin
    omi = c(0.3, 0.4, 0.3, 0.1),  # by inches, outer margin 
    mgp = c(0, 0.3, 0), # set distance of axis
    tcl = 0.4,
    cex.axis = 1,
    mfrow=c(2,1))

funnel(meta_magnitude2, xlab = "", ylab = "", xlim = c(-1.1, 1.1))
mtext(side = 2, text = expression(Standard~error), line = 1.5, cex=1, font=2)
mtext(side = 3, text = expression("( b )"), line = 0.25, cex=1, font=2, adj = 0)

trimfill(meta_magnitude2, black=TRUE) %>% funnel(xlab = "", ylab = "", xlim = c(-1.1, 1.1))
abline(v = 0.0896, col = "red", lty = 2)
mtext(side = 1, text = expression(Ratio~of~means), line = 1.5, cex=1, font=2)
mtext(side = 2, text = expression(Standard~error), line = 1.5, cex=1, font=2)
mtext(side = 3, text = expression("( b )"), line = 0.25, cex=1, font=2, adj = 0)

dev.off()


## (4,5] *****************************************************************************************
meta_magnitude3 <- metacont(mean.e = MBC_t,
                          n.e = MBC_t_n, 
                          sd.e = MBC_t_sd,
                          median.e = MBC_t_median,
                          q1.e = MBC_t_iqr1,
                          q3.e = MBC_t_iqr3,
                            
                          mean.c = MBC_c,
                          n.c = MBC_c_n, 
                          sd.c = MBC_c_sd,
                          median.c = MBC_c_median,
                          q1.c = MBC_c_iqr1,
                          q3.c = MBC_c_iqr3,
                          data=mbc_data %>% filter(Magnitude == "(4,5]"),
                          sm="ROM",
                          studlab = paste(RCT),
                          backtransf = FALSE)

tiff("output/Figure 5b. magnitude_sensitive3.tiff", width = 6, height = 6,
     pointsize = 1/300, units = 'in', res = 300)

forest(metainf(meta_magnitude3, pooled="random"),
       # xlim = c(-0.4,0.1),
       comb.fixed=TRUE, overall = FALSE)

dev.off()



funnel(meta_magnitude3, xlab = "", ylab = "",
       # xlim = c(0.25, 3.75)
       )
trimfill(meta_magnitude3, comb.fixed=TRUE) %>% funnel(xlab = "", ylab = "")
trimfill(meta_magnitude3, comb.fixed=TRUE) %>% summary()

tiff("output/Figure 5b_magnitude_bias3.tiff", width = 5, height = 6, pointsize = 1/300, units = 'in', res = 300)
par(mar=c(2, 0.2, 0.2, 0.2), 
    mai=c(0.3, 0.2, 0.1, 0.1),  # by inches, inner margin
    omi = c(0.3, 0.4, 0.3, 0.1),  # by inches, outer margin 
    mgp = c(0, 0.3, 0), # set distance of axis
    tcl = 0.4,
    cex.axis = 1,
    mfrow=c(2,1))

funnel(meta_magnitude3, xlab = "", ylab = "", xlim = c(-0.9, 0.4))
mtext(side = 2, text = expression(Standard~error), line = 1.5, cex=1, font=2)
mtext(side = 3, text = expression("( c )"), line = 0.25, cex=1, font=2, adj = 0)

trimfill(meta_magnitude3, comb.fixed=TRUE) %>% funnel(xlab = "", ylab = "", xlim = c(-0.9, 0.4))
mtext(side = 1, text = expression(Ratio~of~means), line = 1.5, cex=1, font=2)
mtext(side = 2, text = expression(Standard~error), line = 1.5, cex=1, font=2)
mtext(side = 3, text = expression("( c )"), line = 0.25, cex=1, font=2, adj = 0)

dev.off()


tiff("output/Figure 5b_magnitude_bias4.tiff", width = 5, height = 6, pointsize = 1/300, units = 'in', res = 300)
par(mar=c(2, 0.2, 0.2, 0.2), 
    mai=c(0.3, 0.2, 0.1, 0.1),  # by inches, inner margin
    omi = c(0.3, 0.4, 0.3, 0.1),  # by inches, outer margin 
    mgp = c(0, 0.3, 0), # set distance of axis
    tcl = 0.4,
    cex.axis = 1,
    mfrow=c(2,1))

trimfill(meta_magnitude2, black=TRUE) %>% funnel(xlab = "", ylab = "", xlim = c(-0.9, 0.4))
abline(v = 1.0937, col = "black", lty = 2)
mtext(side = 2, text = expression(Standard~error), line = 1.5, cex=1, font=2)
mtext(side = 3, text = expression("( b )"), line = 0.25, cex=1, font=2, adj = 0)

trimfill(meta_magnitude3, comb.fixed=TRUE) %>% funnel(xlab = "", ylab = "", xlim = c(-0.9, 0.4))
mtext(side = 1, text = expression(Ratio~of~means), line = 1.5, cex=1, font=2)
mtext(side = 2, text = expression(Standard~error), line = 1.5, cex=1, font=2)
mtext(side = 3, text = expression("( c )"), line = 0.25, cex=1, font=2, adj = 0)

dev.off()

```

## subgroup duration
```{r, fig.height=8, fig.width=5}
tiff("output/sub_duration_Forestry.tiff", width = 7, height = 5, pointsize = 1/300, units = 'in', res = 300)
update(meta1, byvar = Duration_w, comb.fixed=FALSE) %>% 
  forest(layout = "subgroup",
         hetlab = "",
         print.tau2 = FALSE,
         test.subgroup = FALSE,
         xlim = c(0.5, 2.5),
         backtransf = FALSE
         )
dev.off()
```


## subgroup SOC
```{r subgrou SOC, fig.height = 8}
tiff("output/sub_SOC_Forestry.tiff", width = 6, height = 8, pointsize = 1/300, units = 'in', res = 300)
update(meta1, byvar = SOC, comb.fixed=FALSE) %>% 
  forest(layout = "subgroup",
         hetlab = "",
         print.tau2 = FALSE,
         test.subgroup = FALSE,
         xlim = c(0.5, 2.5)
         )
dev.off()
```


## meta-regression analysis
```{r reg not significant}
# significant
metareg(meta1, ~MAP) %>% summary()
metareg(meta1, ~MAT) %>% summary()
metareg(meta1, ~SOC_c) %>% summary()
metareg(meta1, ~TN_c) %>% summary()
metareg(meta1, ~pH_c) %>% summary()
metareg(meta1, ~MBN_ROM) %>% summary()

# not significant
metareg(meta1, ~BD) %>% summary()
metareg(meta1, ~CN_c) %>% summary()
metareg(meta1, ~Sand) %>% summary()
metareg(meta1, ~Duration) %>% summary()
metareg(meta1, ~SWC_ROM) %>% summary()
metareg(meta1, ~pH_ROM) %>% summary()
metareg(meta1, ~SOC_ROM) %>% summary()
metareg(meta1, ~TN_ROM) %>% summary()
metareg(meta1, ~CN_ROM) %>% summary()
metareg(meta1, ~TP_ROM) %>% summary()

# plot
metareg(meta1, ~SOC_c) %>% regplot()

metareg(meta1, ~MAP) %>% bubble(xlab = "", ylab = "", col = "gray", bg = "skyblue",
                                col.ref = "black", lty.ref = 2,
                                col.line = "blue",
                                offset = 0.5,
                                )

metareg(meta1, ~MAP) %>% 
  regplot (col = "gray", bg = "lightblue",
           tcl = 0.4,
           transf = exp
           )

metareg(meta1, ~Magnitude_W) %>% bubble(xlab = "", ylab = "")
metareg(meta1, ~Magnitude_W) %>% regplot(xlab = "", ylab = "")

metareg(meta1, ~MAT) %>% bubble(xlab = "", ylab = "")
metareg(meta1, ~SOC_c) %>% bubble(xlab = "", ylab = "")
metareg(meta1, ~TN_c) %>% bubble(xlab = "", ylab = "")




metareg(meta1, ~Duration) -> metareg1
bubble(metareg1, xlab = "Duration (year)")
summary(metareg1)
```

```{r plot regression not significant, fig.width=8, fig.height=7}
# tiff("output/Figure A3 reg-not-sig.tiff", width = 8, height = 7, pointsize = 1/300, units = 'in', res = 300)
par(mar=c(2, 0.2, 0.2, 0.2), 
    mai=c(0.5, 0.2, 0.1, 0.1),  # by inches, inner margin
    omi = c(0, 0.4, 0.3, 0.1),  # by inches, outer margin 
    mgp = c(0, 0.3, 0), # set distance of axis
    tcl = 0.4,
    cex.axis = 1,
    mfrow=c(3,2))

# panel MAT
metareg(meta1, ~MAT) %>% regplot(xlab = "", ylab = "")
mtext(side = 1, text = expression(MAT~(degree~C)), line = 2, cex=1, font=2)
# mtext(side = 2, text = expression("Log ratio of means"), line = 1.5, cex=1, font=2)
mtext(side = 3, text = expression("( b )"), line = 0.25, cex=1, font=2, adj = 0)

# panel MAP
metareg(meta1, ~MAP) %>% regplot(xlab = "", ylab = "")
mtext(side = 1, text = expression(MAP~(mm)), line = 2, cex=1, font=2)
mtext(side = 2, text = expression("Log ratio of means"), line = 1.5, cex=1, font=2)
mtext(side = 3, text = expression("( a )"), line = 0.25, cex=1, font=2, adj = 0)

# panel SOC
metareg(meta1, ~SOC_c) %>% regplot(xlab = "", ylab = "")
mtext(side = 1, text = expression(SOC~("%")), line = 2, cex=1, font=2)
mtext(side = 2, text = expression("Log ratio of means"), line = 1.5, cex=1, font=2)
mtext(side = 3, text = expression("( c )"), line = 0.25, cex=1, font=2, adj = 0)

# panel TN
metareg(meta1, ~TN_c) %>% regplot(xlab = "", ylab = "")
mtext(side = 1, text = expression(TN~("%")), line = 2, cex=1, font=2)
# mtext(side = 2, text = expression("Log ratio of means"), line = 1.5, cex=1, font=2)
mtext(side = 3, text = expression("( d )"), line = 0.25, cex=1, font=2, adj = 0)

# pH
metareg(meta1, ~pH_c) %>% regplot(xlab = "", ylab = "")
mtext(side = 1, text = expression(pH), line = 2, cex=1, font=2)
mtext(side = 2, text = expression("Log ratio of means"), line = 1.5, cex=1, font=2)
mtext(side = 3, text = expression("( e )"), line = 0.25, cex=1, font=2, adj = 0)

# MBN_ROM
metareg(meta1, ~MBN_ROM) %>% regplot(xlab = "", ylab = "")
mtext(side = 1, text = expression(MBN~(ROM)), line = 2, cex=1, font=2)
# mtext(side = 2, text = expression("Log ratio of means"), line = 1.5, cex=1, font=2)
mtext(side = 3, text = expression("( f )"), line = 0.25, cex=1, font=2, adj = 0)

# dev.off()
```

## publication bias
```{r publication bias test}
# tiff("output/meta-publicationBias.tiff", width = 5, height = 6, pointsize = 1/300, units = 'in', res = 300)
par(mar=c(2, 0.2, 0.2, 0.2), 
    mai=c(0.3, 0.2, 0.1, 0.1),  # by inches, inner margin
    omi = c(0.3, 0.4, 0.3, 0.1),  # by inches, outer margin 
    mgp = c(0, 0.3, 0), # set distance of axis
    tcl = 0.4,
    cex.axis = 1,
    mfrow=c(2,1))

funnel(meta1, xlab = "", ylab = "", xlim = c(0.25, 3.75))
mtext(side = 2, text = expression(Standard~error), line = 1.5, cex=1, font=2)
mtext(side = 3, text = expression("( a )"), line = 0.25, cex=1, font=2, adj = 0)

trimfill(meta1, comb.fixed=TRUE) %>% funnel(xlab = "", ylab = "", xlim = c(0.25, 3.75))
mtext(side = 1, text = expression(Ratio~of~means), line = 1.5, cex=1, font=2)
mtext(side = 2, text = expression(Standard~error), line = 1.5, cex=1, font=2)
mtext(side = 3, text = expression("( b )"), line = 0.25, cex=1, font=2, adj = 0)

# dev.off()

metabias(meta1, method = "Egger")
```

```{r sensitive analysis, fig.height=12}
# metainf(meta1, pooled="random")
# tiff("output/Figure A4.metainf.tiff", width = 6, height = 10.5, pointsize = 1/300, units = 'in', res = 300)
forest(metainf(meta1, pooled="random"), comb.fixed=TRUE)
# dev.off()
```


```{r}
summary(trimfill(meta1))
```

## mbc random forest model subset check
```{r mbc random forest model}
mbc_rf <- read.csv("output/mbc_meta_final.csv")
mbc_rf %>% select(MAT, MAP, SOC, pH, Clay, Sand, land_cover, TN, NDVI, Elevation) -> mbc_rf

sapply(mbc_rf, function(x) sum(!is.na(x))) %>% as.data.frame() -> mbc_rf
colnames(mbc_rf) = c("Count")
mbc_rf$Var = c("MAT", "MAP", "SOC", "pH", "Clay", "Sand", "Land-cover", "TN", "NDVI", "Elevation")

mbc_rf %>% 
  ggplot (aes(x = Var, y = Count)) +
  geom_bar(stat="identity", width=0.3) +
  labs(x="", y="Number of data (n)") +
  theme_set(theme_gray(base_size = 20))+  
  theme_bw()+
  theme(legend.title=element_blank()) -> count_plot

# two axises
scaleFUN <- function(x) sprintf("%.0f", x)

count_plot2 <- count_plot + 
  scale_y_continuous(limits = c(0,110)
                     , sec.axis = sec_axis(~.*100/106, name = "Proportion ( % )")
                     , breaks = seq(0,100,25),labels = scaleFUN, position = 'left')

count_plot2 

ggsave("output/FigureSX.Variable count.png", width = 8, height = 4, dpi = 300, units = "in" )
```


## Xu et al. data *************************************************************************************
```{r reference from Xu}
xu_data <- read_xlsx("Patoine/GSMBD20120601.xlsx", n_sheet=1, n_skip = 0)
xu_data %>% select(Reference) %>% unique()-> xu_ref
xu_ref[order(xu_ref$Reference),] -> xu_ref
write.csv(xu_ref, "output/xu_referenc.csv")

```


## quality check for dataset to support randomforest modeling 
```{r check data quality}
mbc_metacsv_ndvi = read.csv("output/mbc_meta_final2.csv")
# check 
mbc_metacsv_ndvi %>% 
  select(pH, ph) %>% 
  ggplot(aes(pH, ph)) +
  geom_point()

mbc_metacsv_ndvi %>% 
  mutate(phh2o = coalesce(pH*10, ph)) -> mbc_metacsv_ndvi

mbc_metacsv_ndvi %>% 
  select(SOC, soc) %>% 
  ggplot(aes(SOC, soc)) +
  geom_point() +
  geom_smooth(method = "lm")

mbc_metacsv_ndvi %>% 
  mutate(soc = coalesce(SOC*100, soc)) -> mbc_metacsv_ndvi

mbc_metacsv_ndvi %>% 
  select(MAP, Pannual_del) %>% 
  ggplot(aes(MAP, Pannual_del)) +
  geom_point() +
  geom_smooth(method = "lm")

mbc_metacsv_ndvi %>% 
  mutate(prec = Pannual_del) -> mbc_metacsv_ndvi


mbc_metacsv_ndvi %>% 
  select(MAT, Tannual_del) %>% 
  ggplot(aes(MAT, Tannual_del)) +
  geom_point() +
  geom_smooth(method = "lm")

mbc_metacsv_ndvi %>% 
  mutate(tmean = Tannual_del) -> mbc_metacsv_ndvi

mbc_metacsv_ndvi %>% 
  select(land_cover, lndcv)

mbc_metacsv_ndvi %>% 
  select(Clay, clay) %>% 
  ggplot(aes(Clay, clay)) +
  geom_point() +
  geom_smooth(method = "lm")

mbc_metacsv_ndvi %>% 
  mutate(clay = coalesce(Clay*10, clay)) -> mbc_metacsv_ndvi

mbc_metacsv_ndvi %>% 
  select(Sand, sand) %>% 
  ggplot(aes(Sand, sand)) +
  geom_point() +
  geom_smooth(method = "lm")

mbc_metacsv_ndvi %>% 
  mutate(sand = coalesce(Sand*10, sand)) -> mbc_metacsv_ndvi

mbc_metacsv_ndvi %>% 
  select(TN, nitg) %>% 
  ggplot(aes(TN, nitg)) +
  geom_point() +
  geom_smooth(method = "lm")

mbc_metacsv_ndvi %>% 
  mutate(nitrogen = coalesce(TN*1000, nitg)) -> mbc_metacsv_ndvi

mbc_metacsv_ndvi %>% 
  select(Elevation, elv) %>% 
  ggplot(aes(Elevation, elv)) +
  geom_point() +
  geom_smooth(method = "lm")

```

## quality check 2
```{r quality check 2}
mbc_metacsv_ndvi = read.csv("output/mbc_meta_final2.csv")

temp1992 = raster(file.path(f_path_dy, "tmean", "tmean_1992_c20201123104725.tif"))
tibble(
  tmean = mbc_metacsv_ndvi$tmean,
  t1992 = raster::extract(temp1992, mbc_metacsv_ndvi %>% select(Longitude, Latitude))) %>% 
  ggplot(aes(tmean, t1992)) + 
  geom_point() +
  geom_smooth(method = "lm")

p1992 = raster(file.path(f_path_dy, "prec", "prec_1992_c20201123105218.tif"))
tibble(
  prec = mbc_metacsv_ndvi$prec,
  p1992 = raster::extract(p1992, mbc_metacsv_ndvi %>% select(Longitude, Latitude))) %>% 
  ggplot(aes(prec, p1992)) + 
  geom_point() +
  geom_smooth(method = "lm")

```


